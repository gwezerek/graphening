/**
*
* Main Stylesheet For Visual Style Guide
*
**/
/**
*
* Utils
*
**/
/*==========  VARIABLES  ==========*/
/*==========  FUNCTIONS  ==========*/
/*==========  MIXINS  ==========*/
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0; }

/**
*
* Global
*
**/
*, *::before, *::after {
  box-sizing: border-box; }

html, body, button {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased; }

body {
  font-family: Helvetica, Arial, sans-serif;
  font-size: 16px;
  line-height: 1.625em;
  /* 26px */
  font-weight: 300;
  color: #404040; }

@font-face {
  font-family: icons;
  src: url(../images/icons/icons.eot);
  src: url(../images/icons/icons.eot?#iefix) format('embedded-opentype'), url(../images/icons/icons.woff2) format('woff2'), url(../images/icons/icons.woff) format('woff'), url(../images/icons/icons.ttf) format('truetype'), url(../images/icons/icons.svg?#icons) format('svg');
  font-weight: normal;
  font-style: normal; }

.icon {
  font-family: 'icons';
  display: inline-block;
  vertical-align: top;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-bullet::before, ul li::before, ul.list-links a::before, .list-anchor a::before {
  content: "\e001"; }

.icon-chevron-down::before {
  content: '\e002'; }

.icon-chevron-large::before {
  content: '\e003'; }

.icon-chevron-left::before {
  content: '\e004'; }

.icon-chevron-right::before, ul.list-links.list-links--primary a::before {
  content: '\e005'; }

.icon-chevron-up::before {
  content: '\e006'; }

.icon-close::before {
  content: '\e007'; }

.icon-cog::before {
  content: '\e008'; }

.icon-diamond::before {
  content: '\e009'; }

.icon-exclamation::before {
  content: '\e00a'; }

.icon-google-dev::before {
  content: '\e00b'; }

.icon-hash::before {
  content: '\e00c'; }

.icon-introduction-to-media::before {
  content: '\e00d'; }

.icon-lessons::before {
  content: '\e00e'; }

.icon-menu::before {
  content: '\e00f'; }

.icon-minus::before {
  content: '\e010'; }

.icon-multi-device-layouts::before {
  content: '\e011'; }

.icon-performance::before {
  content: '\e012'; }

.icon-plus::before {
  content: '\e013'; }

.icon-question::before {
  content: '\e014'; }

.icon-slash::before {
  content: '\e015'; }

.icon-star::before {
  content: '\e016'; }

.icon-tick::before {
  content: '\e017'; }

.icon-user-input::before {
  content: '\e018'; }

/**
*
* Material design color palettes.
* @see http://www.google.com/design/spec/style/color.html
*
**/
/* ==========  Blacks  ========== */
/* ==========  Color Palettes  ========== */
/* ==========  Color definitions  ========== */
/**
*
* Layout
*
**/
.main {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.viz {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }

.filter {
  width: 300px; }

/**
*
* Grid
*
**/
@media only screen and (min-width: 620px) and (max-width: 799px) {
  .g-medium--1 {
    float: left;
    margin-right: 4.5%;
    width: 30.3%; }
  .g-medium--push-1 {
    margin-left: 34.8%; }
  .g-medium--pull-1 {
    margin-right: 34.8%; }
  .g-medium--2 {
    float: left;
    margin-right: 4.5%;
    width: 65.1%; }
  .g-medium--push-2 {
    margin-left: 69.6%; }
  .g-medium--pull-2 {
    margin-right: 69.6%; }
  .g-medium--3 {
    float: left;
    margin-right: 4.5%;
    width: 99.9%;
    margin-right: 0; }
  .g-medium--full {
    float: left;
    margin-right: 4.5%;
    margin-right: 0;
    width: 100%; }
  .g--third {
    float: left;
    margin-right: 4.5%;
    width: 30.3%; }
  .g--half, .g-medium--half {
    float: left;
    margin-right: 4.5%;
    width: 47.75%; }
  .g-medium--last {
    margin-right: 0; }
  .g-medium--last + .g-medium--half {
    clear: left; }
  .g--pull-half {
    margin-right: 52.25%; } }

@media only screen and (min-width: 800px) {
  .g-wide--1 {
    float: left;
    margin-right: 3.7%;
    width: 22.2%; }
  .g-wide--push-1 {
    margin-left: 25.9%; }
  .g-wide--pull-1 {
    margin-right: 25.9%; }
  .g-wide--2 {
    float: left;
    margin-right: 3.7%;
    width: 48.1%; }
  .g-wide--push-2 {
    margin-left: 51.8%; }
  .g-wide--pull-2 {
    margin-right: 51.8%; }
  .g-wide--3 {
    float: left;
    margin-right: 3.7%;
    width: 74%; }
  .g-wide--push-3 {
    margin-left: 77.7%; }
  .g-wide--pull-3 {
    margin-right: 77.7%; }
  .g-wide--4 {
    float: left;
    margin-right: 3.7%;
    width: 99.9%;
    margin-right: 0; }
  .g-wide--last {
    margin-right: 0; }
  .g-wide--full {
    float: left;
    margin-right: 3.7%;
    margin-right: 0;
    width: 100%; }
  .g--third {
    float: left;
    margin-right: 3.7%;
    width: 30.8%; }
  .g--half, .g-wide--half {
    float: left;
    margin-right: 3.7%;
    width: 48.15%; }
  .g--pull-half {
    margin-right: 51.85%; } }

.g--last {
  margin-right: 0; }

.g--centered {
  float: none;
  margin-left: auto;
  margin-right: auto; }

.grid-overlay {
  display: none;
  pointer-events: none; }
  .debug .grid-overlay {
    box-sizing: content-box;
    position: relative;
    padding-left: 5%;
    padding-right: 5%;
    margin-left: auto;
    margin-right: auto;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100%;
    display: block; }
    @media only screen and (min-width: 620px) {
      .debug .grid-overlay {
        padding-left: 4.8%;
        padding-right: 4.8%;
        max-width: 688px; } }
    @media only screen and (min-width: 800px) {
      .debug .grid-overlay {
        padding-left: 4.4%;
        padding-right: 4.4%;
        max-width: 864px; } }
    .debug .grid-overlay [class*="g-"] {
      height: 100%;
      background-color: rgba(89, 89, 89, 0.2); }
    @media only screen and (min-width: 620px) and (max-width: 799px) {
      .debug .grid-overlay .g-wide--last {
        display: none; } }
    @media only screen and (max-width: 619px) {
      .debug .grid-overlay {
        display: none; } }

/**
*
* Typography
*
**/
h1, h2, h3, h4, h5, p {
  margin: 0; }

.small, small {
  font-size: 13px;
  line-height: 2em;
  /* 26px */
  padding-top: 2em;
  padding-bottom: 0; }

.base, p, ul, ol {
  font-size: 16px;
  line-height: 1.625em;
  /* 26px */
  padding-top: 1.625em;
  padding-bottom: 0; }

.medium, h4 {
  font-size: 16px;
  line-height: 1.625em;
  /* 26px */
  padding-top: 1.625em;
  padding-bottom: 0; }
  @media only screen and (min-width: 800px) {
    .medium, h4 {
      font-size: 20px;
      font-weight: 300;
      line-height: 1.3em;
      /* 26px */
      padding-top: 1.3em;
      padding-bottom: 0; } }

.large, h3 {
  font-size: 20px;
  font-weight: 300;
  line-height: 1.3em;
  /* 26px */
  padding-top: 1.3em;
  padding-bottom: 0; }
  @media only screen and (min-width: 800px) {
    .large, h3 {
      font-family: 'Roboto Condensed', Helvetica, sans-serif;
      font-size: 26px;
      font-weight: 300;
      line-height: 1em;
      /* 26px */
      padding-top: 1em;
      padding-bottom: 0; } }

.xlarge, h2 {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  font-size: 26px;
  font-weight: 300;
  line-height: 1em;
  /* 26px */
  padding-top: 1em;
  padding-bottom: 0; }
  @media only screen and (min-width: 800px) {
    .xlarge, h2 {
      font-family: 'Roboto Condensed', Helvetica, sans-serif;
      font-size: 42px;
      font-weight: 300;
      line-height: 1.2381em;
      /* 52px */
      padding-top: 0.619em;
      padding-bottom: 0; } }

.xxlarge, h1 {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  font-size: 42px;
  font-weight: 300;
  line-height: 1.2381em;
  /* 52px */
  padding-top: 0.619em;
  padding-bottom: 0; }
  @media only screen and (min-width: 800px) {
    .xxlarge, h1 {
      font-family: 'Roboto Condensed', Helvetica, sans-serif;
      font-size: 68px;
      font-weight: 300;
      line-height: 1.1471em;
      /* 78px */
      padding-top: 0.3824em;
      padding-bottom: 0; } }

.huge {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  font-size: 68px;
  font-weight: 300;
  line-height: 1.1471em;
  /* 78px */
  padding-top: 0.3824em;
  padding-bottom: 0; }
  @media only screen and (min-width: 800px) {
    .huge {
      font-family: 'Roboto Condensed', Helvetica, sans-serif;
      font-size: 110px;
      font-weight: 300;
      line-height: 1.19em;
      /* 130px */
      padding-top: 0.2364em;
      padding-bottom: 0; } }

li > p {
  padding-top: 0; }

/**
*
* Button
*
**/
.button, .button--primary, .button--secondary, .button--secondary-variation {
  display: inline-block;
  padding: 12px 32px;
  margin-bottom: 13px;
  margin-top: 13px;
  min-height: 26px;
  text-align: center;
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  font-weight: 600;
  text-decoration: none;
  outline: 0;
  transition: none; }
  .button:hover, .button--primary:hover, .button--secondary:hover, .button--secondary-variation:hover {
    background: #4d4d4d;
    color: #ffffff;
    border: 1px solid #4d4d4d;
    text-decoration: none; }

.button--primary {
  background: #4285f4;
  color: #ffffff;
  border: 1px solid #1266f1; }

.button--secondary {
  background: #ffffff;
  color: #3372df;
  border: 1px solid #e6e6e6; }

.button--secondary-variation {
  background: #ffffff;
  color: #3372df;
  border: 1px solid #e6e6e6;
  border-color: transparent; }

/**
*
* List
*
**/
ul, ol {
  list-style: none;
  margin: 0; }
  @media only screen and (max-width: 619px) {
    ul, ol {
      padding-left: 0; } }

ul li {
  position: relative;
  padding-left: 16px; }
  ul li::before {
    font-family: 'icons';
    font-size: 13px;
    display: block;
    font-weight: 400;
    position: absolute;
    top: 0;
    left: 0;
    line-height: 26px; }
  ul li::before {
    font-size: 4px; }

ol {
  counter-reset: list; }
  ol > li {
    position: relative;
    padding-left: 32px; }
    ol > li::before {
      counter-increment: list;
      content: '0' counter(list);
      color: inherit;
      font-weight: 400;
      display: inline-block;
      position: absolute;
      left: 0; }
    ol > li:nth-child(10n) ~ li::before, ol > li:nth-child(10n)::before {
      content: counter(list); }

ul ol, ol ul {
  padding-top: 0; }

/*==========  LIST LINKS  ==========*/
ul.list-links li::before {
  display: none; }
ul.list-links a {
  font-weight: 400; }
  ul.list-links a::before {
    font-family: 'icons';
    font-size: 13px;
    display: block;
    font-weight: 400;
    position: absolute;
    top: 0;
    left: 0;
    line-height: 26px; }
  ul.list-links a::before {
    font-size: 4px; }
ul.list-links.list-links--primary a {
  font-weight: 400;
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  line-height: 1;
  text-decoration: none; }
  ul.list-links.list-links--primary a::before {
    font-family: 'icons';
    font-size: 13px;
    display: block;
    font-weight: 400;
    position: absolute;
    top: 0;
    left: 0;
    line-height: 26px; }

ol.list-links li::before {
  display: none; }
ol.list-links li a {
  display: inline-block;
  font-weight: 300; }
  ol.list-links li a::before {
    counter-increment: list;
    content: '0' counter(list);
    color: inherit;
    font-weight: 400;
    display: inline-block;
    position: absolute;
    left: 0; }
ol.list-links li:nth-child(10n) ~ li a::before, ol.list-links li:nth-child(10n) a::before {
  content: counter(list); }
ol.list-links.list-links--secondary a::before {
  display: none; }

.list-links--secondary {
  font-size: 16px;
  line-height: 1.625em;
  /* 26px */
  padding-top: 1.625em;
  padding-bottom: 0;
  padding-left: 0; }
  .list-links--secondary li {
    padding-left: 0; }

/*==========  ANCHOR LIST  ==========*/
.list-anchor {
  padding-left: 0; }
  .list-anchor li {
    font-size: 16px;
    line-height: 1.625em;
    /* 26px */
    padding-top: 1.625em;
    padding-bottom: 0;
    padding-top: 0;
    padding-left: 0; }
    .list-anchor li::before {
      display: none; }
  .list-anchor a {
    line-height: 1;
    display: inline-block;
    padding-left: 16px; }
    .list-anchor a::before {
      font-family: 'icons';
      font-size: 13px;
      display: block;
      font-weight: 400;
      position: absolute;
      top: 0;
      left: 0;
      line-height: 26px; }
    .list-anchor a::before {
      font-size: 4px; }

/*==========  SMALL LIST  ==========*/
@media only screen and (min-width: 620px) {
  .list-small li {
    font-size: 13px;
    line-height: 2em;
    /* 26px */
    padding-top: 2em;
    padding-bottom: 0;
    padding-top: 0; } }

/*==========  CENTERED LIST  ==========*/
.list-centered {
  text-align: center;
  padding-left: 0; }

/*==========  FEATURED LIST  ==========*/
.featured-list {
  padding-top: 78px;
  padding-bottom: 78px; }

.featured-list__item {
  background: #ffffff;
  padding-left: 0;
  padding-top: 26px;
  padding-bottom: 26px;
  margin-top: 26px; }
  @media only screen and (min-width: 620px) {
    .featured-list__item {
      min-height: 338px;
      padding: 52px 32px; } }
  .featured-list__item:first-child {
    margin-top: 0; }
  .featured-list__item p {
    margin-bottom: 26px; }

.featured-list__img-wrapper {
  display: none;
  position: relative;
  padding-top: 26px;
  margin: 0 -5%; }
  @media only screen and (min-width: 620px) {
    .featured-list__img-wrapper {
      display: block;
      padding-top: 0;
      margin: 0; } }

@media only screen and (min-width: 620px) {
  .featured-list__img {
    padding-top: 60.8%;
    padding-bottom: 0;
    height: 0;
    overflow: hidden;
    position: absolute;
    width: 100%; } }
.featured-list__img img {
  display: block;
  margin: 0 auto;
  max-width: 100%; }
  @media only screen and (min-width: 620px) {
    .featured-list__img img {
      margin: 0;
      position: absolute;
      top: 0;
      height: 100%;
      width: 100%;
      left: 0; } }

/*==========  RELATED GUIDES LIST  ==========*/
.related-guides-list {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  padding-top: 0;
  padding-left: 0; }
  @media only screen and (min-width: 620px) {
    .related-guides-list {
      padding-top: 26px; } }
  @media only screen and (min-width: 800px) {
    .related-guides-list {
      padding-top: 0; } }
  .related-guides-list p {
    padding-top: 0; }
  .related-guides-list .tag {
    padding-top: 0; }
  .related-guides-list li {
    padding-top: 26px;
    padding-bottom: 25px;
    border-bottom: 1px solid #e0e0e0; }
    .related-guides-list li:last-child {
      border-color: transparent; }
    @media only screen and (min-width: 620px) {
      .related-guides-list li {
        padding-top: 0;
        padding-bottom: 0;
        border-color: transparent; } }

/*==========  LIST RESET  ==========*/
.list--reset {
  padding-left: 0; }
  .list--reset li {
    padding-left: 0; }
  .list--reset.list-links a::before, .list--reset li::before {
    display: none !important; }

/*==========  LESSONS  ==========*/
.list-lessons {
  padding-left: 0; }
  .list-lessons a {
    color: #ffffff; }
  .list-lessons .current, .list-lessons .current a {
    text-decoration: none;
    cursor: default; }
  .list-lessons .current .icon {
    font-size: 13px;
    display: inline-block;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 100%;
    width: 26px;
    line-height: 26px;
    text-align: center;
    margin-left: 7px; }

/*==========  GUIDES INTO - used on homepage  ==========*/
.list-guides-intro {
  margin-bottom: 52px; }
  @media only screen and (max-width: 619px) {
    .list-guides-intro {
      padding-top: 52px; } }
  .list-guides-intro li {
    border-bottom: 1px solid #e0e0e0;
    padding-bottom: 51px;
    margin-bottom: 52px; }
    @media only screen and (min-width: 620px) {
      .list-guides-intro li {
        border-color: transparent;
        padding-bottom: 0; } }
    .list-guides-intro li:last-child {
      border-bottom: transparent;
      margin-bottom: 0; }

/**
*
* Link
*
**/
a {
  color: #3372df; }

a:hover {
  text-decoration: none; }

.cta--primary {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  color: #3372df;
  font-weight: 400;
  display: inline-block;
  line-height: 1;
  text-decoration: none; }
  .cta--primary:hover {
    color: rgba(0, 0, 0, 0.87); }
  .cta--primary::before {
    display: inline-block;
    padding-right: 10px;
    font-family: 'icons';
    line-height: 25px;
    font-size: 13px;
    content: '\e005'; }

.cta--secondary {
  font-family: 'Roboto Condensed', Helvetica, sans-serif;
  color: #3372df;
  font-weight: 400;
  display: inline-block;
  line-height: 1; }
  .cta--secondary:hover {
    color: rgba(0, 0, 0, 0.87); }


/*# sourceMappingURL=data:application/json;base64, */